@startuml ACT_getModulesOneByOne

partition  <b>getModulesOneByOne</b> <i>(Boolean forceUpdate, FilterEnum filtering)</i> {
    
    start
    :get App User Object;
    if(<i>forceUpdate</i>) then (YES)
        fork
            #lightblue:get all available modules object \n from <b>LOCAL CACHE</b>;
        fork again
            :get all available modules object \n from <b>NETWORK SCANN</b>;
        end fork
    else (NO)
        #lightblue:get all available modules object \n from <b>LOCAL CACHE</b>;
    endif 
    :Filter Module Objects \n NO ACCESS from <b>LOCAL DB</b>;
    :Module Object]
    if(Module Access is PENDING) then (YES)
    #palegreen: <b>RPC</b> get User Level>
    if() then (ERROR)
        #pink : <b>Exception</b> \n Communication Error;
        note left
            Errors never propagate 
            so the stream of objects 
            is never interrupted
        end note
        : user level = PENDING;
    else
        #yellow: <b>RESP</b> User Level <
        switch()
            case(\t 200)
                : User Level ]
                : update user level;
                
            case(\t 404)
                : user level = UNAUTHORIZED;
                
            endswitch
        endif
        : Module Object ]
    else (NO)
    endif
    :<b>FILTER</b> based on <i>filtering</i>;
    :<b>MAP</b> to Use Case Response Object;
    stop
}
@enduml